!. Why Sass? 

No code. 

2. Compiling Sass
 
sass main.scss main.css
This code will be auto-compiling in the background for the duration of this section of the course. 

3. Sass Overview

No code

4. Nesting Selectors


.banner {
  font-family: 'Pacifico', cursive;
  height: 400px;
  background-image: url("lemonade.jpg");
  border : {
    top: $standard-border;
    bottom: $standard-border;
  }
    .slogan {
  position: absolute;
  border: 4px solid black;
  top: 200px;
  left: 25%;
  width: 50%;
  height: 200px;
  text-align: center;
      span {
  font-size: 24px;
  line-height: 200px;
}
}
	}
  

.container {
  text-align: center;
  font-family: 'Pacifico', cursive;
  
  .icon {
  display: inline-block;
  margin: 2%;
  border: 4px solid black;
  font-size: 32px;
}
}

5. Nesting Properties

.banner {
  font-family: 'Pacifico', cursive;
  height: 400px;
  background-image: url("lemonade.jpg");
  border : {
    top: $standard-border;
    bottom: $standard-border;
  }
  border : {
    top: 4px solid black;
    bottom: 4px solid black;
}
    .slogan {
  position: absolute;
  border: 4px solid black;
  top: 200px;
  left: 25%;
  width: 50%;
  height: 200px;
  text-align: center;
      span {
  font-size: 24px;
  line-height: 200px;
}
}
	}
  
  
 6. Variables in Sass
 
 $translucent-white: rgba(255,255,255,0.3);
 
 .slogan {
  background-color: $translucent-white;
  position: absolute;
  border: 4px solid black;
  top: 200px;
  left: 25%;
  width: 50%;
  height: 200px;
  text-align: center;
}  

7. Sass(y) Types

$icon-square-length: 300px;

 .icon {
  	display: inline-block;
  	margin: 2%;
  	border: $standard-border;
  	font-size: 32px;
    width: $icon-square-length;
		height: $icon-square-length;
	}
  
  8. Maps & Lists
  main.scss
  @import url(https://fonts.googleapis.com/css?family=Pacifico);
//Add variables here:
$translucent-white: rgba(255,255,255,0.3);
$icon-square-length: 300px;
$standard-border: 4px solid black;
$icon-square-length: 300px;

h1 {
  font-family: Roboto, sans-serif;
  text-align: center;
}

.banner {
  font-family: 'Pacifico', cursive;
  height: 400px;
  background-image: url("lemonade.jpg");
  border : {
    top: $standard-border;
    bottom: $standard-border;
  }
  border : {
    top:  $standard-border;
    bottom:  $standard-border;
}
    .slogan {
  background-color: $translucent-white;
  position: absolute;
  border:  $standard-border;
  top: 200px;
  left: 25%;
  width: 50%;
  height: 200px;
  text-align: center;
      span {
  font-size: 24px;
  line-height: 200px;
}
}
	}
  


.container {
  text-align: center;
  font-family: 'Pacifico', cursive;
  
  .icon {
  display: inline-block;
  margin: 2%;
  border:  $standard-border;
  font-size: 32px;
}

  
  
  .icon {
  	display: inline-block;
  	margin: 2%;
  	border: $standard-border;
  	font-size: 32px;
    width: $icon-square-length;
		height: $icon-square-length;
	}
}

main.css

@import url(https://fonts.googleapis.com/css?family=Pacifico);
h1 {
  font-family: Roboto, sans-serif;
  text-align: center;
}

.banner {
  font-family: 'Pacifico', cursive;
  height: 400px;
  background-image: url("lemonade.jpg");
  border-top: 4px solid black;
  border-bottom: 4px solid black;
  border-top: 4px solid black;
  border-bottom: 4px solid black;
}

.banner .slogan {
  background-color: rgba(255, 255, 255, 0.3);
  position: absolute;
  border: 4px solid black;
  top: 200px;
  left: 25%;
  width: 50%;
  height: 200px;
  text-align: center;
}

.banner .slogan span {
  font-size: 24px;
  line-height: 200px;
}

.container {
  text-align: center;
  font-family: 'Pacifico', cursive;
}

.container .icon {
  display: inline-block;
  margin: 2%;
  border: 4px solid black;
  font-size: 32px;
}

.container .icon {
  display: inline-block;
  margin: 2%;
  border: 4px solid black;
  font-size: 32px;
  width: 300px;
  height: 300px;
}

9. Generalisations 

Nesting is the process of placing child selectors and properties in the scope of a parent selector. This allows a programmer to draw DOM relationships and avoid repetition.

Variables make it easy to update code and reference values by allowing you to assign an identifier to a value.

Sass Data Types include:

Numbers
Strings
Booleans
null
Lists
Maps
